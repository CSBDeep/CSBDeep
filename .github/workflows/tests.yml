name: Test

on:
  push:
    branches-ignore:
      - pypi
  pull_request:
    branches:
      - main
      - dev

jobs:
  test:
    name: Test (${{ matrix.os }}, py${{ matrix.python-version }}, tf${{ matrix.tensorflow }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-latest, macos-latest]
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10', '3.11', '3.12']
        tensorflow: [1, 2]
        include:
          # cases for using x86_64-based runner (macos-13)
          - os: macos-13
            python-version: '3.6'  # no arm64 wheels
            tensorflow: 1
          - os: macos-13
            python-version: '3.6'  # no arm64 wheels
            tensorflow: 2
          - os: macos-13
            python-version: '3.7'  # no arm64 wheels
            tensorflow: 1
          - os: macos-13
            python-version: '3.7'  # no arm64 wheels
            tensorflow: 2
          - os: macos-13
            python-version: '3.12'
            tensorflow: 2
        exclude:
          - python-version: '3.12'
            tensorflow: 1
          - python-version: '3.11'
            tensorflow: 1
          - python-version: '3.10'
            tensorflow: 1
          - python-version: '3.9'
            tensorflow: 1
          - python-version: '3.8'
            tensorflow: 1
          - os: macos-latest
            python-version: '3.6'
          - os: macos-latest
            python-version: '3.7'

    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install --upgrade pip wheel setuptools
      - run: pip install "tensorflow==${{ matrix.tensorflow }}.*"
      - uses: actions/checkout@v4
      - if: matrix.tensorflow == 1
        run: pip install ".[test,tf1]"
      - if: matrix.tensorflow == 2
        run: pip install ".[test]"
      - run: pytest -v --durations=50